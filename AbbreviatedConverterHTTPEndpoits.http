@ASP.Net.UnitsNetSerializationExamples_HostAddress = http://localhost:5183/UnitsNetConverter
@Volume = Volume
@VolumeMsr = Liter
@UnitValue1 = 2.5
@UnitValue2 = 1.5
@Mass = Mass
@MassMsr = Kilogram
@Density = Density
@DensityMsr = GramPerCubicMeter
@DensityMsr2 = CentigramPerMilliliter
@gpermililiter = g%2Fml

# GET Default Mass
GET {{ASP.Net.UnitsNetSerializationExamples_HostAddress}}/default-mass
Accept: application/json

###

# GET construct-quantity-by-name
GET {{ASP.Net.UnitsNetSerializationExamples_HostAddress}}/construct-quantity-by-name?quantityName={{Volume}}&unitName={{VolumeMsr}}&value={{UnitValue1}}
Accept: application/json

###

# GET construct-density-from-unit
GET {{ASP.Net.UnitsNetSerializationExamples_HostAddress}}/construct-density-from-unit?unit={{DensityMsr}}&value={{UnitValue1}}
Accept: application/json

###

# GET create-density-from-massUnit-and-volumeUnit
GET {{ASP.Net.UnitsNetSerializationExamples_HostAddress}}/create-density-from-massUnit-and-volumeUnit?massUnit={{MassMsr}}&massValue={{UnitValue2}}&volumeUnit={{VolumeMsr}}&volumeValue={{UnitValue1}}
Accept: application/json

###

# POST convert-to-unit-with-abbreviation
POST {{ASP.Net.UnitsNetSerializationExamples_HostAddress}}/convert-to-unit-with-abbreviation?targetUnitAbbreviation={{gpermililiter}}
Content-Type: application/json
Accept: application/json

{
  "Value": 1,
  "Unit": "kg/m³",
  "Type": "Density"
}


###

# POST convert-density-unit
POST {{ASP.Net.UnitsNetSerializationExamples_HostAddress}}/convert-density-unit?toDensityUnit={{DensityMsr2}}
Content-Type: application/json
Accept: application/json

{
  "Value": 1,
  "Unit": "kg/m³",
  "Type": "Density"
}

###

